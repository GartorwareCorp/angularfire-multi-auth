angular.module("angularfire-multi-auth",["firebase"]),angular.module("angularfire-multi-auth").config(["$provide",function(a){a.decorator("$firebaseAuth",["$delegate","$q","$window","FBURL_ALTERNATE",function(a,b,c,d){var e=a;return a=function(f){function g(a){var b;return b=a.indexOf("://")>-1?a.split("/")[2]:a.split("/")[0],b=b.split(":")[0]}function h(a){return a.split(".firebaseio.com")[0]}var i=e(f),j=i.$createUser,k=i.$removeUser,l=i.$authWithPassword,m=i.$authWithOAuthPopup;return i.$createUser=function(a){var c=b.defer();return j(a).then(function(b){l(a).then(function(a){var d=new Firebase(f.root()+"/authGroup"),e={};e[a.provider]=a.uid;var g=d.push(e,function(){var d=new Firebase(f.root()+"/userMapping"),e={};e[a.uid]=g.key(),d.set(e,function(){i.$unauth(),c.resolve(b)})})})["catch"](function(a){c.reject(a)})})["catch"](function(a){c.reject(a)}),c.promise},i.$removeUser=function(a){var c=b.defer();return l(a).then(function(b){var d=new Firebase(f.root()+"/authGroup");d.orderByChild(b.provider).equalTo(b.uid).on("child_added",function(b){b.ref().remove(function(b){b?c.reject(b):(i.$unauth(),k(a).then(function(){c.resolve()})["catch"](function(a){c.reject(a)}))})})})["catch"](function(a){c.reject(a)}),c.promise},i.$authWithPassword=function(a,d){var e=b.defer();return l(a,d).then(function(a){var b=h(g(f.root().toString())),d=JSON.parse(c.localStorage.getItem("firebase:session::"+b)),i=new Firebase(f.root()+"/userMapping/"+a.uid);i.on("value",function(f){d.authGroup=f.val(),a.authGroup=f.val(),c.localStorage.setItem("firebase:session::"+b,JSON.stringify(d)),e.resolve(a)})})["catch"](function(a){e.reject(a)}),e.promise},i.$authWithOAuthPopup=function(a,d){var e=b.defer();return m(a,d).then(function(a){var b=h(g(f.root().toString())),d=JSON.parse(c.localStorage.getItem("firebase:session::"+b)),i=new Firebase(f.root()+"/userMapping/"+a.uid);i.once("value",function(g){var h=null!==g.val();if(h)d.authGroup=g.val(),a.authGroup=g.val(),c.localStorage.setItem("firebase:session::"+b,JSON.stringify(d)),e.resolve(a);else{var i=new Firebase(f.root()+"/authGroup"),j={};j[a.provider]=a.uid;var k=i.push(j,function(){var g=new Firebase(f.root()+"/userMapping"),h={};h[a.uid]=k.key(),g.update(h,function(){d.authGroup=k.key(),a.authGroup=k.key(),c.localStorage.setItem("firebase:session::"+b,JSON.stringify(d)),e.resolve(a)})})}})})["catch"](function(a){e.reject(a)}),e.promise},i.$associateSocial=function(c){var e=b.defer(),g=new Firebase(d),h=a(g),j=i.$getAuth(),k=new Firebase(f.root()+"/authGroup/"+j.authGroup);return k.orderByKey().equalTo(c).once("value",function(a){c===j.provider||null!==a.val()?e.reject("You already is using an "+c+" account."):h.$authWithOAuthPopup(c).then(function(a){var b=new Firebase(f.root()+"/userMapping/"+a.uid);b.once("value",function(b){var c=null!==b.val();if(c)e.reject("User is already associated to another account");else{var d=new Firebase(f.root()+"/authGroup/"+j.authGroup),g={};g[a.provider]=a.uid,d.update(g,function(){var b=new Firebase(f.root()+"/userMapping"),c={};c[a.uid]=j.authGroup,b.update(c,function(){h.$unauth(),e.resolve(a)})})}})})["catch"](function(a){e.reject(a)})}),e.promise},i.$disassociateSocial=function(a,c){var d=b.defer(),e=i.$getAuth();if(a===e.uid)d.reject("The user you want to disassociate is the logged user, please logoff and login with another user");else{var g=new Firebase(f.root()+"/userMapping/"+a);g.remove(function(a){if(a)d.reject(a);else{var b=new Firebase(f.root()+"/authGroup/"+e.authGroup+"/"+c);b.remove(function(a){a?d.reject(a):d.resolve()})}})}return d.promise},i.$associatePassword=function(a){var c=b.defer(),d=i.$getAuth(),e=new Firebase(f.root()+"/authGroup/"+d.authGroup);return e.orderByKey().equalTo("password").once("value",function(b){var e=null!==b.val();"password"===d.provider||e?c.reject("You already is using an password account."):j(a).then(function(a){var b=new Firebase(f.root()+"/userMapping/"+a.uid);b.once("value",function(b){var e=null!==b.val();if(e)c.reject("User is already associated to another account");else{var g=new Firebase(f.root()+"/authGroup/"+d.authGroup),h={};h.password=a.uid,g.update(h,function(){var b=new Firebase(f.root()+"/userMapping"),e={};e[a.uid]=d.authGroup,b.update(e,function(){c.resolve(a)})})}})})["catch"](function(a){c.reject(a)})}),c.promise},i}}])}]);